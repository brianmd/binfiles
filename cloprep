#!/bin/bash

# Allow project-specific commands
if [[ -f bin/pre-prep ]]; then
    source bin/pre-prep
fi

CLO_SHARED=false
if [[ $NO_SIDE_EFFECTS == true ]]; then
  CLO_SHARED=true
else
  while [[ $# -gt 0 ]]; do
    if [[ $1 =~ ^[0-9]+$ ]]; then
        NUM_ARG=$1
    elif [[ $1 == "shared" ]]; then
        CLO_SHARED=true
    else
        PROJ_NAME="$1"
    fi
    shift
  done
fi

if [[ $CLO_SHARED == "true" ]]; then
  WHOAMI=`whoami`
  USERID=`grep $WHOAMI /etc/passwd | cut -d: -f 3`
  GROUPID=`grep $WHOAMI /etc/passwd | cut -d: -f 4`
else
  CREATE_USER=false
  WHOAMI=clojure
  USERID=9999
  GROUPID=$USERID
fi

DOCKER_USER_HOME="/home/$WHOAMI"
DOCKER_WORKDIR="$DOCKER_USER_HOME/project"
CURR_PATH=`pwd -P`
SCRIPT_DIR=`dirname "$(readlink -f "$0")"`
BASE_NAME=`basename "$CURR_PATH"`
PROJ_NAME=$BASE_NAME

if [[ -f $HOME/.lein/profiles.clj ]]; then
  mkdir -p .docker-state/lein
  cp $HOME/.lein/profiles.clj .docker-state/lein/
fi

if [[ $NO_SIDE_EFFECTS != true ]]; then
  mkdir -p .docker-state/m2
  mkdir -p .docker-state/lein
  mkdir -p .docker-state/target
  mkdir -p .docker-state/log
fi


# TODO: make $CURR_PATH volume read only.
#       will need to make a few exceptions, such as .nrepl-port
# but this does not appear to work:
#    -v $CURR_PATH/.nrepl_port:$DOCKER_WORKDIR/.nrepl_port \

if [[ $CLO_SHARED == "false" ]]; then
  if [[ $NO_SIDE_EFFECTS != true ]]; then
    touch .lein-env .nrepl-port figwheel_server.log
    chmod a+rwx .docker-state/* .lein-env .nrepl-port figwheel_server.log
  fi

  CLO_VOLUMES="\
   -v $CURR_PATH:$DOCKER_WORKDIR \
   -v $CURR_PATH/.docker-state/m2:$DOCKER_USER_HOME/.m2 \
   -v $CURR_PATH/.docker-state/lein:$DOCKER_USER_HOME/.lein \
   -v $CURR_PATH/.docker-state/target:$DOCKER_WORKDIR/target \
   -v $CURR_PATH/.docker-state/log:$DOCKER_WORKDIR/log"
else
  CLO_VOLUMES="\
   -v $CURR_PATH:$DOCKER_WORKDIR \
   -v $HOME/.m2:$DOCKER_USER_HOME/.m2 \
   -v $HOME/.lein:$DOCKER_USER_HOME/.lein"
fi

if [[ -f bin/post-prep ]]; then
  source bin/post-prep
fi

